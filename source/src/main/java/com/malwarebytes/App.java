package com.malwarebytes;

import com.malwarebytes.config.SourceConfiguration;
import com.malwarebytes.generator.Snowflake;
import com.malwarebytes.kafka.KafkaApi;
import com.malwarebytes.kafka.KafkaCreatorFactory;
import com.malwarebytes.model.CardInfo;
import com.malwarebytes.resources.AuthResource;
import io.dropwizard.Application;
import io.dropwizard.configuration.ResourceConfigurationSourceProvider;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class App extends Application<SourceConfiguration> {
    private static final Logger LOGGER = LoggerFactory.getLogger(App.class);

    @Override
    public void initialize(Bootstrap<SourceConfiguration> bootstrap) {
        bootstrap.setConfigurationSourceProvider(new ResourceConfigurationSourceProvider());
        super.initialize(bootstrap);
    }

    @Override
    public void run(SourceConfiguration configuration, Environment environment) throws Exception {
        LOGGER.info("Method App#run() called");
        KafkaApi<CardInfo> kafkaApi = new KafkaCreatorFactory().create(
                configuration.getKafkaProducerConfig());
        environment.jersey().register(new AuthResource(kafkaApi, new Snowflake()));
    }



    public static void main( String[] args ) throws Exception
    {
        new App().run(args);
    }
}
